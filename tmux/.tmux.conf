# Store this config file in ~/.tmux.conf
# remap prefix/<Leader> from 'Ctrl-b' to 'Ctrl-Space'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix
# bind-key C-Space send-prefix

bind r source-file ~/.tmux.conf \; display-message "Configuration reloaded."
bind C-Space last-window

# <Leader>- splits into horizontal panes
bind-key - split-window -v  -c '#{pane_current_path}'
bind-key \\ split-window -h  -c '#{pane_current_path}'
unbind '"'
unbind %

set -s escape-time 0

# switch panes using Alt-vimarrow without prefix
# M: meta key (alt)
bind -n M-h select-pane -L
bind -n M-l select-pane -R
bind -n M-k select-pane -U
bind -n M-j select-pane -D

bind -n M-Up switch-client -n
bind -n M-Down switch-client -p

# don't rename windows automatically based on last executed command
# to prevent ssh from renaming window name
set-option -g allow-rename off

# set mouse mode on for automatic scrolling in tmux buffer
setw -g mouse on
set -g status-interval 1
set -g history-limit 100000
set -g mode-keys vi
set -g base-index 1
set -g set-titles on
set -g set-titles-string "#I:#W [#P:#{pane_current_command}]"

# clear screen and scroll history by simply pressing Ctrl+K
# -n allows it to run without needing of prefix key
set -g renumber-windows on
bind -n C-k send-keys -R \; send-keys C-l \; clear-history

# in normal tmux mode
bind Escape copy-mode # `tmux prefix + Escape` starts copy mode.
bind C-a copy-mode # `tmux prefix + Escape` starts copy mode.
bind p paste-buffer # `prefix + p` pastes the latest buffer
bind-key -n M-Left previous-window
bind-key -n M-Right next-window
bind-key -n M-1 previous-window
bind-key -n M-2 next-window

# swap windows
bind-key < swap-window -t -1
bind-key > swap-window -t +1

# in copy modeâ€¦
unbind-key -T copy-mode-vi v
bind-key -T copy-mode-vi 'v' send -X begin-selection     # Begin selection in copy mode.
bind-key -T copy-mode-vi 'C-v' send -X rectangle-toggle \; send -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
#bind -t vi-copy v begin-selection # `v` begins a selection. (movement keys to select the desired bits)
#bind -t vi-copy y copy-pipe "xclip -i -sel clip" # `y` copies the current selection to one of tmux's "paste buffers"
#bind -t vi-copy y copy-pipe "xclip -sel clip" # `y` copies the current selection to one of tmux's "paste buffers"
#bind -t vi-copy V rectangle-toggle # `V` changes between line- and columnwise selection
#bind -t vi-copy Y copy-end-of-line # ^1

# 256 colors
set -g default-terminal "screen-256color"

bind -T root WheelUpPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
bind -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; send-keys -M"

set -g base-index 1           # start windows numbering at 1
setw -g pane-base-index 1     # make pane numbering consistent with windows

setw -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed
bind Tab last-window        # move to last active window

# -- copy mode -----------------------------------------------------------------

bind Enter copy-mode # enter copy mode

# run -b 'tmux bind -t vi-copy v begin-selection 2> /dev/null || true'
# run -b 'tmux bind -T copy-mode-vi v send -X begin-selection 2> /dev/null || true'
# run -b 'tmux bind -t vi-copy C-v rectangle-toggle 2> /dev/null || true'
# run -b 'tmux bind -T copy-mode-vi C-v send -X rectangle-toggle 2> /dev/null || true'
# run -b 'tmux bind -t vi-copy y copy-selection 2> /dev/null || true'
# run -b 'tmux bind -T copy-mode-vi y send -X copy-selection-and-cancel 2> /dev/null || true'
# run -b 'tmux bind -t vi-copy Escape cancel 2> /dev/null || true'
# run -b 'tmux bind -T copy-mode-vi Escape send -X cancel 2> /dev/null || true'
# run -b 'tmux bind -t vi-copy H start-of-line 2> /dev/null || true'
# run -b 'tmux bind -T copy-mode-vi H send -X start-of-line 2> /dev/null || true'
# run -b 'tmux bind -t vi-copy L end-of-line 2> /dev/null || true'
# run -b 'tmux bind -T copy-mode-vi L send -X end-of-line 2> /dev/null || true'
# 

# copy to macOS clipboard
#if -b 'command -v pbcopy > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | pbcopy"'
#if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | reattach-to-user-namespace pbcopy"'
## copy to X11 clipboard
#if -b 'command -v xsel > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xsel -i -b"'
#if -b '! command -v xsel > /dev/null 2>&1 && command -v xclip > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xclip -i -selection clipboard >/dev/null 2>&1"'
## copy to Windows clipboard
#if -b 'command -v clip.exe > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | clip.exe"'
#if -b '[ -c /dev/clipboard ]' 'bind y run -b "tmux save-buffer - > /dev/clipboard"'
#


######################
### DESIGN CHANGES ###
######################

# panes
set -g pane-border-style fg=black
set -g pane-active-border-style fg=brightred

## Status bar design
# status line
set -g status-justify left
set -g status-bg default
set -g status-fg colour12

# messaging
set -g message-style fg=black,bg=yellow

#window mode
setw -g mode-style bg=colour6,fg=colour0

# window status
setw -g window-status-format " #F#I:#W#F "
setw -g window-status-current-format " #F#I:#W#F "
setw -g window-status-format "#[fg=magenta]#[bg=black] #I #[bg=cyan]#[fg=colour8] #W "
setw -g window-status-current-format "#[bg=brightmagenta]#[fg=colour8] #I #[fg=colour8]#[bg=colour14] #W "

# loud or quiet?
set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence off
set-window-option -g monitor-activity off
set-option -g bell-action none

set -g default-terminal "screen-256color"

# The modes {
setw -g clock-mode-colour colour135

# }
# The panes {

# }
# The statusbar {

set -g status-position bottom
set -g status-bg colour234
set -g status-fg colour137
set -g status-left ''
set-window-option -g status-left " #S "
#set -g status-right '#[fg=colour233,bg=colour241,bold] %A %d %b #[fg=colour233,bg=colour245,bold] %I:%M '
#set -g status-right '#[fg=colour233,bg=colour241,bold] #[fg=colour233,bg=colour245,bold] %I:%M '
set -g status-right '#H'
set -g status-right-length 50
set -g status-left-length 20

setw -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour255]#W#[fg=colour50]#F '

setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '

# }
# The messages {

set -g message-style fg=colour232,bg=colour166

# }

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'Morantron/tmux-fingers'


# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
