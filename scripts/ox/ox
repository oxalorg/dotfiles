#!/bin/bash

JOURNAL=~/projects/org
NOTES=$JOURNAL/notes
LOGS=$JOURNAL/logs
BLOG=~/projects/oxal.org
SNIPDIR=~/projects/oxal.org/src/snip

oxhelp () {
    echo "ox mntanagement system:"
    echo ""
    echo "Commands:"
    echo "  oxdiary"
    echo "  oxdreams"
    echo "  oxantisocial"
    echo "  oxwork"
    echo "  oxfood"
    echo "  oxnote"
    echo "  oxfind"
    echo "  oxsearch"
    echo "  oxtags"
    echo "  oxmentions"
    echo "  oxtodos"
    echo "  oxedit"
    echo "  oxin"
    echo ""
    echo "Aliases:"
    echo "  nt"
    echo "  jr"
}

## Journal
oxdiary () {
    $EDITOR $JOURNAL/diary/$(date +%F).md
}

oxdreams () {
    $EDITOR $JOURNAL/dreams/$(date +%F).md
}

oxantisocial () {
    $EDITOR $JOURNAL/antisocial/$(date +%FT%H:%M:%S).md
}

oxwork () {
    # work journal
    $EDITOR $JOURNAL/work/$(date +%Y).md
}

oxfood () {
    $EDITOR $LOGS/food/$(date +%Y).md
}

oxnote () {
    slug=`echo "$*" | iconv -t ascii//TRANSLIT | sed -E 's/[^a-zA-Z0-9]+/-/g' | sed -E 's/^-+\|-+$//g' | tr A-Z a-z`
    $EDITOR $NOTES/$(date +%F)-$slug.md
}

oxfind () {
    # searches for a term, shows a list of all files with that term
    # shows a preview of each file
    cd $JOURNAL
    local query=${@-""}
    $EDITOR "$(ag -G '(md|txt)$' -l $query | fzf --preview='head -n 100 {}' --color light --margin 2,2)"
}

oxsearch () {
    ag -C 3 -G '(md|txt)$' "$@" $JOURNAL
}

oxtags () {
    # searches for ALL tags like #yolo #wow #ethan #great #moves #such doge
    # Specific tag search can simply be done by oxsearch()
    if [ -z "$@" ]; then
        ag -G '(md|txt)$' '#[a-zA-Z\-_0-9!]+' $JOURNAL
    else
        ag -G '(md|txt)$' "#$@" $JOURNAL
    fi
}

oxmentions () {
    # searches for mentions like @ox @rogue @noob @2016-02-16
    if [ -z "$@" ]; then
        ag -G '(md|txt)$' '@[a-zA-Z\-_0-9!]+' $JOURNAL
    else
        ag -G '(md|txt)$' "@$@" $JOURNAL
    fi
}

oxtodos () {
    ag -G '(md|txt)$' 'TODO' $JOURNAL
}

oxedit () {
    cd $JOURNAL
    local query=${@-""}
    $EDITOR "$(fzf --preview='head -$LINES {}' -1 -q "$query")"
}

# oxadd () {
#     local query=${@-""}
#     local p=$(find -L $NOTES -type d ! -path \*.git\* | sed "s|.*notes||" | fzf -1 -q "$@")
#     cd $NOTES/$p
#     $EDITOR
# }

# Create snippet
oxsnip0() {
    # pbpaste and pbcopy should be mapped to xlcip on linux in zshrc
    local genname=`pbpaste | head -c 25 | sed 's|\ |_|g' | sed 's|/|_|g' `
    local filename=${@:-$genname}
    local slug=`echo $filename | sed 's|[# ]|_|g' | sed 's|[_]*$||'`
    local filepath="$(date +%F-%H%M%S)-${slug}.txt"
    pbpaste >>! $SNIPDIR/$filepath
    echo "\n" >>! $SNIPDIR/$filepath
    cd $BLOG
    make sync
    URL="https://oxal.org/snip/${filepath}"
    echo $URL | pbcopy
    echo "$URL"
}
# Create snippet from clipboard
oxsnip() {
    # Generate default filename from clipboard if no argument is provided
    local genname=$(pbpaste | head -c 25 | tr -s '[:space:]/#' '_' | sed 's/_*$//')
    local input_name="${*:-$genname}"

    # Normalize slug: replace spaces and # with underscores, trim trailing _
    local slug=$(echo "$input_name" | tr -s '[:space:]#/' '_' | sed 's/_*$//')

    # Generate timestamp and 5-char random slug
    local timestamp=$(date +%F-%H%M%S)
    local randslug=$(LC_CTYPE=C tr -dc 'a-z0-9' </dev/urandom | head -c 5)

    # Construct final filepath
    local filename="${timestamp}-${randslug}-${slug}.txt"
    local fullpath="$SNIPDIR/$filename"

    # Save clipboard content to file
    pbpaste > "$fullpath"
    echo "" >> "$fullpath"

    # Sync blog and copy URL
    cd "$BLOG" && make sync
    local url="https://oxal.org/snip/${filename}"
    echo "$url" | pbcopy
    echo "$url"
}

# Inbox to dump everything which will later be organized
alias oxin="$EDITOR $JOURNAL/inbox.md"
# alias -g inbox="$JOURNAL/inbox.md"

# Quick jumps
alias nt='cd $NOTES'
alias jr='cd $JOURNAL'
